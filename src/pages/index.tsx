import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { type RouterOutputs, api } from "~/utils/api";
import Image from "next/image";

const CreatePostWizard = () => {
  const { isLoaded, isSignedIn, user } = useUser();
  if (!isSignedIn) return null;

  return (
    <div className="flex w-full gap-4 px-4">
      <Image
        src={user.profileImageUrl}
        alt="User Profile"
        className="rounded-full"
        width={64}
        height={16}
      />
      <input
        placeholder="What's on your mind?"
        className="w-full grow border-none bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex w-full flex-col gap-4 px-4">
      <div className="flex w-full gap-4">
        <Image
          src={author.profileImageUrl}
          alt={author.username}
          className="rounded-full"
          width={64}
          height={20}
        />
        <div className="flex w-full flex-col">
          <div className="flex w-full gap-2">
            <p className="font-bold">{author?.username}</p>
            <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
          </div>
          <p>{post.content}</p>
        </div>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded, isSignedIn, user } = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (!isLoaded || isLoading) return <p>Loading...</p>;
  if (!data) return <p>Failed to load posts.</p>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {isSignedIn ? (
          <div className="flex flex-col items-center justify-center">
            <h1 className="text-4xl font-bold">Hello {user.fullName}!</h1>
            <CreatePostWizard />
            <SignOutButton>Sign out</SignOutButton>
          </div>
        ) : (
          <div className="flex flex-col items-center justify-center">
            <h1 className="text-4xl font-bold">Hello!</h1>
            <p className="text-2xl font-medium">You are not signed in.</p>
            <SignInButton>Sign in</SignInButton>
          </div>
        )}
        <div className="flex flex-col items-center justify-center">
          {data.map(({ post, author }) => (
            <PostView post={post} author={author} key={post.id} />
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;
